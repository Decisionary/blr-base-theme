////
/// @group Abstracts
////



/// Converts a unitless, pixel, or rem value to em for use in breakpoints.
///
/// @access private
///
/// @param {Number} $value - The value to convert.
///
/// @return {Number} The converted value.
@function _bp-to-em( $value ) {

	// Convert pixel / unitless values into rems.
	@if unit( $value ) == 'px' or unitless( $value ) {
		$value: rem-calc( $value, $base: 16px );
	}

	// Convert value into ems.
	@return strip-unit( $value ) * 1em;
}

/// Takes a valid breakpoint name and returns its width.
/// Returns null if the breakpoint is not defined.
///
/// @param {String} $breakpoint - The breakpoint to get the width for.
/// @param {String} $min-max ['min'] - Set to 'max' for a `max-width` media query.
///
/// @return {Number}
@function get-breakpoint( $breakpoint, $min-max: 'min' ) {

	@if not map-has-key( $breakpoints, $breakpoint ) {
		@warn "`#{$breakpoint}` is not a valid breakpoint name.";
		@return null;
	}

	$width: _bp-to-em( map-get( $breakpoints, $breakpoint ) );

	@if 'max' == $min-max {
		$width: $width - 0.000001em;
	}

	@return $width;
}
