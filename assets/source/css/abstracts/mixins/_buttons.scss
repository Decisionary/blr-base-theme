/// Button variant mixin.
///
/// @param {String} $variant - The button variant.
@mixin button-variant( $variant ) {

	@if not map-has-key( $button-variants, $variant ) {

		@warn "`#{$variant}` is not a valid button variant.";

	} @else {

		$theme: map-get( $button-variants, $variant );

		@if 'default' != $variant {
			$theme: map-extend( map-get( $button-variants, 'default' ), $theme );
		}

		@include button-colors( $theme );
	}
}

/// Creates a basic colored button.
///
/// @param {Map} $theme - The button colors you want to use.
@mixin button-color( $theme ) {

	$color:                   map-get( $theme, 'color' );
	$color-hover:             map-get( $theme, 'color-hover' );
	$color-focus:             map-get( $theme, 'color-focus' );
	$color-active:            map-get( $theme, 'color-active' );
	$background-color:        map-get( $theme, 'background-color' );
	$background-color-hover:  map-get( $theme, 'background-color-hover' );
	$background-color-focus:  map-get( $theme, 'background-color-focus' );
	$background-color-active: map-get( $theme, 'background-color-active' );
	$border-color:            map-get( $theme, 'border-color' );
	$border-color-hover:      map-get( $theme, 'border-color-hover' );
	$border-color-focus:      map-get( $theme, 'border-color-focus' );
	$border-color-active:     map-get( $theme, 'border-color-active' );

	@include visited( true ) {
		border-color: $border-color;
		background-color: $background-color;
		color: $color;

		@include hover {
			border-color: $border-color-hover;
			background-color: $background-color-hover;
			color: $color-hover;
		}

		@include focus {
			border-color: $border-color-focus;
			background-color: $background-color-focus;
			color: $color-focus;
		}

		@include active {
			border-color: $border-color-active;
			background-color: $background-color-active;
			color: $color-active;
		}
	}
}
